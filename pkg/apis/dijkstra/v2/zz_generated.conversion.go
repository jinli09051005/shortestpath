//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (C) 2024 JinLi Co.,Ltd. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v2

import (
	unsafe "unsafe"

	dijkstra "jinli.io/shortestpath/pkg/apis/dijkstra"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Display)(nil), (*dijkstra.Display)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Display_To_dijkstra_Display(a.(*Display), b.(*dijkstra.Display), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.Display)(nil), (*Display)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_Display_To_v2_Display(a.(*dijkstra.Display), b.(*Display), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DisplayList)(nil), (*dijkstra.DisplayList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DisplayList_To_dijkstra_DisplayList(a.(*DisplayList), b.(*dijkstra.DisplayList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.DisplayList)(nil), (*DisplayList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_DisplayList_To_v2_DisplayList(a.(*dijkstra.DisplayList), b.(*DisplayList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DisplaySpec)(nil), (*dijkstra.DisplaySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DisplaySpec_To_dijkstra_DisplaySpec(a.(*DisplaySpec), b.(*dijkstra.DisplaySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.DisplaySpec)(nil), (*DisplaySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_DisplaySpec_To_v2_DisplaySpec(a.(*dijkstra.DisplaySpec), b.(*DisplaySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DisplayStatus)(nil), (*dijkstra.DisplayStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_DisplayStatus_To_dijkstra_DisplayStatus(a.(*DisplayStatus), b.(*dijkstra.DisplayStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.DisplayStatus)(nil), (*DisplayStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_DisplayStatus_To_v2_DisplayStatus(a.(*dijkstra.DisplayStatus), b.(*DisplayStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Edge)(nil), (*dijkstra.Edge)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Edge_To_dijkstra_Edge(a.(*Edge), b.(*dijkstra.Edge), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.Edge)(nil), (*Edge)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_Edge_To_v2_Edge(a.(*dijkstra.Edge), b.(*Edge), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KnownNodes)(nil), (*dijkstra.KnownNodes)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KnownNodes_To_dijkstra_KnownNodes(a.(*KnownNodes), b.(*dijkstra.KnownNodes), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.KnownNodes)(nil), (*KnownNodes)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_KnownNodes_To_v2_KnownNodes(a.(*dijkstra.KnownNodes), b.(*KnownNodes), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KnownNodesList)(nil), (*dijkstra.KnownNodesList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KnownNodesList_To_dijkstra_KnownNodesList(a.(*KnownNodesList), b.(*dijkstra.KnownNodesList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.KnownNodesList)(nil), (*KnownNodesList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_KnownNodesList_To_v2_KnownNodesList(a.(*dijkstra.KnownNodesList), b.(*KnownNodesList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KnownNodesSpec)(nil), (*dijkstra.KnownNodesSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KnownNodesSpec_To_dijkstra_KnownNodesSpec(a.(*KnownNodesSpec), b.(*dijkstra.KnownNodesSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.KnownNodesSpec)(nil), (*KnownNodesSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_KnownNodesSpec_To_v2_KnownNodesSpec(a.(*dijkstra.KnownNodesSpec), b.(*KnownNodesSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KnownNodesStatus)(nil), (*dijkstra.KnownNodesStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_KnownNodesStatus_To_dijkstra_KnownNodesStatus(a.(*KnownNodesStatus), b.(*dijkstra.KnownNodesStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.KnownNodesStatus)(nil), (*KnownNodesStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_KnownNodesStatus_To_v2_KnownNodesStatus(a.(*dijkstra.KnownNodesStatus), b.(*KnownNodesStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Node)(nil), (*dijkstra.Node)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_Node_To_dijkstra_Node(a.(*Node), b.(*dijkstra.Node), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.Node)(nil), (*Node)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_Node_To_v2_Node(a.(*dijkstra.Node), b.(*Node), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StartNode)(nil), (*dijkstra.StartNode)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_StartNode_To_dijkstra_StartNode(a.(*StartNode), b.(*dijkstra.StartNode), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.StartNode)(nil), (*StartNode)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_StartNode_To_v2_StartNode(a.(*dijkstra.StartNode), b.(*StartNode), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TargetNode)(nil), (*dijkstra.TargetNode)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v2_TargetNode_To_dijkstra_TargetNode(a.(*TargetNode), b.(*dijkstra.TargetNode), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*dijkstra.TargetNode)(nil), (*TargetNode)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_dijkstra_TargetNode_To_v2_TargetNode(a.(*dijkstra.TargetNode), b.(*TargetNode), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v2_Display_To_dijkstra_Display(in *Display, out *dijkstra.Display, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v2_DisplaySpec_To_dijkstra_DisplaySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v2_DisplayStatus_To_dijkstra_DisplayStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v2_Display_To_dijkstra_Display is an autogenerated conversion function.
func Convert_v2_Display_To_dijkstra_Display(in *Display, out *dijkstra.Display, s conversion.Scope) error {
	return autoConvert_v2_Display_To_dijkstra_Display(in, out, s)
}

func autoConvert_dijkstra_Display_To_v2_Display(in *dijkstra.Display, out *Display, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_dijkstra_DisplaySpec_To_v2_DisplaySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_dijkstra_DisplayStatus_To_v2_DisplayStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_dijkstra_Display_To_v2_Display is an autogenerated conversion function.
func Convert_dijkstra_Display_To_v2_Display(in *dijkstra.Display, out *Display, s conversion.Scope) error {
	return autoConvert_dijkstra_Display_To_v2_Display(in, out, s)
}

func autoConvert_v2_DisplayList_To_dijkstra_DisplayList(in *DisplayList, out *dijkstra.DisplayList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]dijkstra.Display)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v2_DisplayList_To_dijkstra_DisplayList is an autogenerated conversion function.
func Convert_v2_DisplayList_To_dijkstra_DisplayList(in *DisplayList, out *dijkstra.DisplayList, s conversion.Scope) error {
	return autoConvert_v2_DisplayList_To_dijkstra_DisplayList(in, out, s)
}

func autoConvert_dijkstra_DisplayList_To_v2_DisplayList(in *dijkstra.DisplayList, out *DisplayList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Display)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_dijkstra_DisplayList_To_v2_DisplayList is an autogenerated conversion function.
func Convert_dijkstra_DisplayList_To_v2_DisplayList(in *dijkstra.DisplayList, out *DisplayList, s conversion.Scope) error {
	return autoConvert_dijkstra_DisplayList_To_v2_DisplayList(in, out, s)
}

func autoConvert_v2_DisplaySpec_To_dijkstra_DisplaySpec(in *DisplaySpec, out *dijkstra.DisplaySpec, s conversion.Scope) error {
	out.NodeIdentity = in.NodeIdentity
	if err := Convert_v2_StartNode_To_dijkstra_StartNode(&in.StartNode, &out.StartNode, s); err != nil {
		return err
	}
	out.Algorithm = in.Algorithm
	return nil
}

// Convert_v2_DisplaySpec_To_dijkstra_DisplaySpec is an autogenerated conversion function.
func Convert_v2_DisplaySpec_To_dijkstra_DisplaySpec(in *DisplaySpec, out *dijkstra.DisplaySpec, s conversion.Scope) error {
	return autoConvert_v2_DisplaySpec_To_dijkstra_DisplaySpec(in, out, s)
}

func autoConvert_dijkstra_DisplaySpec_To_v2_DisplaySpec(in *dijkstra.DisplaySpec, out *DisplaySpec, s conversion.Scope) error {
	out.NodeIdentity = in.NodeIdentity
	if err := Convert_dijkstra_StartNode_To_v2_StartNode(&in.StartNode, &out.StartNode, s); err != nil {
		return err
	}
	out.Algorithm = in.Algorithm
	return nil
}

// Convert_dijkstra_DisplaySpec_To_v2_DisplaySpec is an autogenerated conversion function.
func Convert_dijkstra_DisplaySpec_To_v2_DisplaySpec(in *dijkstra.DisplaySpec, out *DisplaySpec, s conversion.Scope) error {
	return autoConvert_dijkstra_DisplaySpec_To_v2_DisplaySpec(in, out, s)
}

func autoConvert_v2_DisplayStatus_To_dijkstra_DisplayStatus(in *DisplayStatus, out *dijkstra.DisplayStatus, s conversion.Scope) error {
	out.TargetNodes = *(*[]dijkstra.TargetNode)(unsafe.Pointer(&in.TargetNodes))
	out.LastUpdate = in.LastUpdate
	out.ComputeStatus = in.ComputeStatus
	out.Record = *(*map[string]string)(unsafe.Pointer(&in.Record))
	return nil
}

// Convert_v2_DisplayStatus_To_dijkstra_DisplayStatus is an autogenerated conversion function.
func Convert_v2_DisplayStatus_To_dijkstra_DisplayStatus(in *DisplayStatus, out *dijkstra.DisplayStatus, s conversion.Scope) error {
	return autoConvert_v2_DisplayStatus_To_dijkstra_DisplayStatus(in, out, s)
}

func autoConvert_dijkstra_DisplayStatus_To_v2_DisplayStatus(in *dijkstra.DisplayStatus, out *DisplayStatus, s conversion.Scope) error {
	out.TargetNodes = *(*[]TargetNode)(unsafe.Pointer(&in.TargetNodes))
	out.LastUpdate = in.LastUpdate
	out.ComputeStatus = in.ComputeStatus
	out.Record = *(*map[string]string)(unsafe.Pointer(&in.Record))
	return nil
}

// Convert_dijkstra_DisplayStatus_To_v2_DisplayStatus is an autogenerated conversion function.
func Convert_dijkstra_DisplayStatus_To_v2_DisplayStatus(in *dijkstra.DisplayStatus, out *DisplayStatus, s conversion.Scope) error {
	return autoConvert_dijkstra_DisplayStatus_To_v2_DisplayStatus(in, out, s)
}

func autoConvert_v2_Edge_To_dijkstra_Edge(in *Edge, out *dijkstra.Edge, s conversion.Scope) error {
	out.To = in.To
	out.Cost = in.Cost
	return nil
}

// Convert_v2_Edge_To_dijkstra_Edge is an autogenerated conversion function.
func Convert_v2_Edge_To_dijkstra_Edge(in *Edge, out *dijkstra.Edge, s conversion.Scope) error {
	return autoConvert_v2_Edge_To_dijkstra_Edge(in, out, s)
}

func autoConvert_dijkstra_Edge_To_v2_Edge(in *dijkstra.Edge, out *Edge, s conversion.Scope) error {
	out.To = in.To
	out.Cost = in.Cost
	return nil
}

// Convert_dijkstra_Edge_To_v2_Edge is an autogenerated conversion function.
func Convert_dijkstra_Edge_To_v2_Edge(in *dijkstra.Edge, out *Edge, s conversion.Scope) error {
	return autoConvert_dijkstra_Edge_To_v2_Edge(in, out, s)
}

func autoConvert_v2_KnownNodes_To_dijkstra_KnownNodes(in *KnownNodes, out *dijkstra.KnownNodes, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v2_KnownNodesSpec_To_dijkstra_KnownNodesSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v2_KnownNodesStatus_To_dijkstra_KnownNodesStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v2_KnownNodes_To_dijkstra_KnownNodes is an autogenerated conversion function.
func Convert_v2_KnownNodes_To_dijkstra_KnownNodes(in *KnownNodes, out *dijkstra.KnownNodes, s conversion.Scope) error {
	return autoConvert_v2_KnownNodes_To_dijkstra_KnownNodes(in, out, s)
}

func autoConvert_dijkstra_KnownNodes_To_v2_KnownNodes(in *dijkstra.KnownNodes, out *KnownNodes, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_dijkstra_KnownNodesSpec_To_v2_KnownNodesSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_dijkstra_KnownNodesStatus_To_v2_KnownNodesStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_dijkstra_KnownNodes_To_v2_KnownNodes is an autogenerated conversion function.
func Convert_dijkstra_KnownNodes_To_v2_KnownNodes(in *dijkstra.KnownNodes, out *KnownNodes, s conversion.Scope) error {
	return autoConvert_dijkstra_KnownNodes_To_v2_KnownNodes(in, out, s)
}

func autoConvert_v2_KnownNodesList_To_dijkstra_KnownNodesList(in *KnownNodesList, out *dijkstra.KnownNodesList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]dijkstra.KnownNodes)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v2_KnownNodesList_To_dijkstra_KnownNodesList is an autogenerated conversion function.
func Convert_v2_KnownNodesList_To_dijkstra_KnownNodesList(in *KnownNodesList, out *dijkstra.KnownNodesList, s conversion.Scope) error {
	return autoConvert_v2_KnownNodesList_To_dijkstra_KnownNodesList(in, out, s)
}

func autoConvert_dijkstra_KnownNodesList_To_v2_KnownNodesList(in *dijkstra.KnownNodesList, out *KnownNodesList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]KnownNodes)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_dijkstra_KnownNodesList_To_v2_KnownNodesList is an autogenerated conversion function.
func Convert_dijkstra_KnownNodesList_To_v2_KnownNodesList(in *dijkstra.KnownNodesList, out *KnownNodesList, s conversion.Scope) error {
	return autoConvert_dijkstra_KnownNodesList_To_v2_KnownNodesList(in, out, s)
}

func autoConvert_v2_KnownNodesSpec_To_dijkstra_KnownNodesSpec(in *KnownNodesSpec, out *dijkstra.KnownNodesSpec, s conversion.Scope) error {
	out.NodeIdentity = in.NodeIdentity
	out.CostUnit = in.CostUnit
	out.Nodes = *(*[]dijkstra.Node)(unsafe.Pointer(&in.Nodes))
	return nil
}

// Convert_v2_KnownNodesSpec_To_dijkstra_KnownNodesSpec is an autogenerated conversion function.
func Convert_v2_KnownNodesSpec_To_dijkstra_KnownNodesSpec(in *KnownNodesSpec, out *dijkstra.KnownNodesSpec, s conversion.Scope) error {
	return autoConvert_v2_KnownNodesSpec_To_dijkstra_KnownNodesSpec(in, out, s)
}

func autoConvert_dijkstra_KnownNodesSpec_To_v2_KnownNodesSpec(in *dijkstra.KnownNodesSpec, out *KnownNodesSpec, s conversion.Scope) error {
	out.NodeIdentity = in.NodeIdentity
	out.CostUnit = in.CostUnit
	out.Nodes = *(*[]Node)(unsafe.Pointer(&in.Nodes))
	return nil
}

// Convert_dijkstra_KnownNodesSpec_To_v2_KnownNodesSpec is an autogenerated conversion function.
func Convert_dijkstra_KnownNodesSpec_To_v2_KnownNodesSpec(in *dijkstra.KnownNodesSpec, out *KnownNodesSpec, s conversion.Scope) error {
	return autoConvert_dijkstra_KnownNodesSpec_To_v2_KnownNodesSpec(in, out, s)
}

func autoConvert_v2_KnownNodesStatus_To_dijkstra_KnownNodesStatus(in *KnownNodesStatus, out *dijkstra.KnownNodesStatus, s conversion.Scope) error {
	out.LastUpdate = in.LastUpdate
	out.Record = *(*map[string]string)(unsafe.Pointer(&in.Record))
	return nil
}

// Convert_v2_KnownNodesStatus_To_dijkstra_KnownNodesStatus is an autogenerated conversion function.
func Convert_v2_KnownNodesStatus_To_dijkstra_KnownNodesStatus(in *KnownNodesStatus, out *dijkstra.KnownNodesStatus, s conversion.Scope) error {
	return autoConvert_v2_KnownNodesStatus_To_dijkstra_KnownNodesStatus(in, out, s)
}

func autoConvert_dijkstra_KnownNodesStatus_To_v2_KnownNodesStatus(in *dijkstra.KnownNodesStatus, out *KnownNodesStatus, s conversion.Scope) error {
	out.LastUpdate = in.LastUpdate
	out.Record = *(*map[string]string)(unsafe.Pointer(&in.Record))
	return nil
}

// Convert_dijkstra_KnownNodesStatus_To_v2_KnownNodesStatus is an autogenerated conversion function.
func Convert_dijkstra_KnownNodesStatus_To_v2_KnownNodesStatus(in *dijkstra.KnownNodesStatus, out *KnownNodesStatus, s conversion.Scope) error {
	return autoConvert_dijkstra_KnownNodesStatus_To_v2_KnownNodesStatus(in, out, s)
}

func autoConvert_v2_Node_To_dijkstra_Node(in *Node, out *dijkstra.Node, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	out.PreNode = (*dijkstra.Node)(unsafe.Pointer(in.PreNode))
	out.Edges = *(*[]dijkstra.Edge)(unsafe.Pointer(&in.Edges))
	return nil
}

// Convert_v2_Node_To_dijkstra_Node is an autogenerated conversion function.
func Convert_v2_Node_To_dijkstra_Node(in *Node, out *dijkstra.Node, s conversion.Scope) error {
	return autoConvert_v2_Node_To_dijkstra_Node(in, out, s)
}

func autoConvert_dijkstra_Node_To_v2_Node(in *dijkstra.Node, out *Node, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	out.PreNode = (*Node)(unsafe.Pointer(in.PreNode))
	out.Edges = *(*[]Edge)(unsafe.Pointer(&in.Edges))
	return nil
}

// Convert_dijkstra_Node_To_v2_Node is an autogenerated conversion function.
func Convert_dijkstra_Node_To_v2_Node(in *dijkstra.Node, out *Node, s conversion.Scope) error {
	return autoConvert_dijkstra_Node_To_v2_Node(in, out, s)
}

func autoConvert_v2_StartNode_To_dijkstra_StartNode(in *StartNode, out *dijkstra.StartNode, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	return nil
}

// Convert_v2_StartNode_To_dijkstra_StartNode is an autogenerated conversion function.
func Convert_v2_StartNode_To_dijkstra_StartNode(in *StartNode, out *dijkstra.StartNode, s conversion.Scope) error {
	return autoConvert_v2_StartNode_To_dijkstra_StartNode(in, out, s)
}

func autoConvert_dijkstra_StartNode_To_v2_StartNode(in *dijkstra.StartNode, out *StartNode, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	return nil
}

// Convert_dijkstra_StartNode_To_v2_StartNode is an autogenerated conversion function.
func Convert_dijkstra_StartNode_To_v2_StartNode(in *dijkstra.StartNode, out *StartNode, s conversion.Scope) error {
	return autoConvert_dijkstra_StartNode_To_v2_StartNode(in, out, s)
}

func autoConvert_v2_TargetNode_To_dijkstra_TargetNode(in *TargetNode, out *dijkstra.TargetNode, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	out.Distance = in.Distance
	out.Path = in.Path
	return nil
}

// Convert_v2_TargetNode_To_dijkstra_TargetNode is an autogenerated conversion function.
func Convert_v2_TargetNode_To_dijkstra_TargetNode(in *TargetNode, out *dijkstra.TargetNode, s conversion.Scope) error {
	return autoConvert_v2_TargetNode_To_dijkstra_TargetNode(in, out, s)
}

func autoConvert_dijkstra_TargetNode_To_v2_TargetNode(in *dijkstra.TargetNode, out *TargetNode, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	out.Distance = in.Distance
	out.Path = in.Path
	return nil
}

// Convert_dijkstra_TargetNode_To_v2_TargetNode is an autogenerated conversion function.
func Convert_dijkstra_TargetNode_To_v2_TargetNode(in *dijkstra.TargetNode, out *TargetNode, s conversion.Scope) error {
	return autoConvert_dijkstra_TargetNode_To_v2_TargetNode(in, out, s)
}
